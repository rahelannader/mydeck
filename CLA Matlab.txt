
fuction [w]=CLA(m);
% Input m is an mxn matrix, the nth asset has m outcomes
% W is the optimal weights on this asset
% Based on 
mean=mean(m);
[q,z]=size(m);
s1=zeros(z,q+1);
s1(:,2:end)=m';
s1(:,1)=mean';
s1=sortrows(s1,-1);
s=s1(:,2:end)';
m=s1(:,1)';
v=cov(s);
for i=2:length(s);
if i<3;
F=v(1:i,1:i);
MF=m(1,1:i);
O=ones(length(MF),1);
C=-(O'\F*O)*(MF\F)+(O'\F*MF')*(O'/F);
for i=1:length(C);
if C(:,i)>0;
b(:,i)=1;
else;
b(:,i)=-2
end
end;
lambda=(O'/C)*[-(O\F*O')*b];
w=zeros(length(S)+4,length(S));
w(4:i+4,i)=-lambda.*(MF\F);
w(1,i)=MF*w(4:end,i)';
w(2,i)=w(4:end,i)*F*w(4:end,i)';
w(3,i)=w(1,i)./w(2,i);
clear F,MF,O,C,Lambda;
elseif w(3,i-2)>w(3,i-1);
break;
else;
F=v(1:i,1:i);
MF=m(1:i,1);
O=ones(length(MF),1);
C=-(O\F*O')*(MF\F)+(O\F*MF)*(O'\F);
if C>0;
b=U;
else;
b=L;
end;
lambda=(1/C)*[-(O\F*O')*b];
w=zeros(length(S)+4,length(S));
w(4:end,i)=-lambda*(MF\F);
w(1,i)=w(4:end,i)'*MF;
w(2,i)=w(4:end,i)'*F*w(4:end,i);
w(3,i)=w(1,i)./w(2,i);
clear F,MF,O,C,Lambda;
end;
end;
end;
